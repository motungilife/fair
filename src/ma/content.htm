<div x-data="handleContent()">
  <div class="content-card">
    <h2 class="card-title"> 사전 등록 </h2>
    <p class="card-text">
      처음 박람회 가시는 83%가 놓치고 있던 사실!<br>
      사전 등록, 일정만 알면 놓치지 않습니다.!<br>
      지금 바로 확인하고 혜택 놓치지 마세요!</p>
    <span class="card-icon">🎁️</span>
  </div>
  <h2 class="section-title" id="aros1">사전 등록 임박, 지금 바로 신청!</h2>
  <div class="support-grid">
    <template x-for="row in preUrls" :key="row.eventName">
      <a class="support-card" :class="getClsColor('blue')" :href="row.blogUrl">
        <div class="support-title" x-text="row.eventName"></div>
        <div class="support-subtitle" x-text="row.admissionFee"></div>
        <div class="support-icon" x-text="getTimeEmoji()"></div>
      </a>
    </template>
  </div>
  <div>
    <!-- <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9235956900770105"
      crossorigin="anonymous"></script> -->
    <!-- [디스플레이, 사각형, 반응형] 중간 -->
    <!-- <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9235956900770105" data-ad-slot="9852728268"
      data-ad-format="auto" data-full-width-responsive="true"></ins>
    <script>
      (adsbygoogle = window.adsbygoogle || []).push({});
    </script> -->
  </div>
  <h2 class="section-title">다른 행사 일정이 궁금하시다면!</h2>
  <div class="support-grid">
    <template x-for="row in monthUrls" :key="row.month">
      <a class="support-card" :class="getClsColor('green')" :href="row.moonthUrl">
        <div class="support-title"><span x-text="row.month"></span>월</div>
        <div class="support-subtitle" x-text="row.events"></div>
        <div class="support-icon" x-text="getMonthEmoji(row.month)"></div>
      </a>
    </template>
  </div>
  <h2 class="section-title" id="aros2">다른 지역 행사도 확인해보세요!</h2>
  <div class="support-grid">
    <template x-for="row in regionUrls" :key="row.region">
      <a class="support-card" :class="getClsColor('purple')" :href="row.regionUrl">
        <div class="support-title" x-text="row.region"></div>
        <div class="support-subtitle" x-text="row.events"></div>
        <div class="support-icon" x-text="getRegionEmoji(row.region)"></div>
      </a>
    </template>
  </div>
  <h2 class="section-title" id="aros3">가까운 전시장 찾아보세요!</h2>
  <div class="support-grid">
    <template x-for="row in venueUrls" :key="row.venue">
      <a class="support-card" :class="getClsColor('gold')" :href="row.venueUrl">
        <div class="support-title" x-text="row.venue"></div>
        <div class="support-subtitle" x-text="row.events"></div>
        <div class="support-icon" x-text="getVenueEmoji(row.venue)"></div>
      </a>
    </template>
  </div>
</div>
<script>
  function handleContent() {
    return {
      blogUrls: [],
      preUrls: [],
      monthUrls: [],
      regionUrls: [],
      venueUrls: [],
      async init() {
        const resBlogs = await fetch('/src/ma/blog_urls.json');
        this.blogUrls = await resBlogs.json();
        this.preUrls = this.blogUrls.filter(item => {
          const now = dayjs();
          const preregEndDate = dayjs('' + item.preregEndDate);
          return now.isBefore(preregEndDate) && now.startOf('month').isBefore(preregEndDate) && now.endOf('month').add(15, 'day').isAfter(preregEndDate);
        });

        this.preUrls = this.preUrls.map(item => {
          const now = dayjs();
          const preregEndDate = dayjs('' + item.preregEndDate);
          const daysLeft = preregEndDate.diff(now, 'day');
          return {
            ...item,
            admissionFee: `사전 등록 마감일 : ${preregEndDate.format('YYYY.MM.DD')}`,
          };
        });

        const resMonths = await fetch('/src/ma/month_urls.json');
        const nowMonth = new Date().getMonth() + 1;
        this.monthUrls = (await resMonths.json()).filter(item => {
          return item.month >= nowMonth;
        }).map(item => {
          return {
            ...item,
            events: this.blogUrls.filter(blog => {
              return item.month === Number(dayjs('' + blog.scheduleStartDate).format('M'));
            }).map(blog => blog.eventName).join(', '),
          };
        }).filter(item => {
          return item.events.trim().length > 0;
        });

        const resRegions = await fetch('/src/ma/region_urls.json');
        this.regionUrls = (await resRegions.json()).map(item => {
          return {
            ...item,
            events: this.blogUrls.filter(blog => {
              return item.region === blog.eventRegion;
            }).map(blog => blog.eventName).join(', '),
          };
        }).filter(item => {
          return item.events.trim().length > 0;
        });

        const resVenues = await fetch('/src/ma/venue_urls.json');
        this.venueUrls = (await resVenues.json()).map(item => {
          return {
            ...item,
            events: this.blogUrls.filter(blog => {
              return item.venue === blog.eventVenue;
            }).map(blog => blog.eventName).join(', '),
          };
        }).filter(item => {
          return item.events.trim().length > 0;
        });
      },
    };
  }
</script>